###############################################################################
#                                                                             #
#     IAR Systems Z80/64180 Assembler V4.06A/W32 25/Mar/2012  20:53:13        #
#     Copyright 2001 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  z80                                              #
#           Source file   =  js-os.asm                                        #
#           List file     =  js-os.lst                                        #
#           Object file   =  js-os.r01                                        #
#           Command line  =  js-os.asm -l js-os.lst                           #
#                                                                             #
###############################################################################

      1    005B00          ; ------- external modules
      2    000000          extern    font8
      3    005B00          #include "conf.asm"
      4    005B00          #include "macro.asm"
      5    005B00          #include "vars.asm"
      6    004420          
      7    004420          
      8    004420          ; ------- main code
      9    000000                          rseg CODE
     10    000000          
     11    000000 F3                       di
     12    000001 C3....                   jp START
     13    000004          
     14    000080                          org h'80        ; Decimal 128
     15    000080          START
     16    000080 0611                     ld b,h'11
     17    000082 1605                     ld d, h'5
     18    000084 CD....                   call set_ram_pager
     19    000087 310060                   ld sp, stck
     20    00008A 3E0C                     ld a,h'0C                       ;
                                                 Set charcol variable to
                                                 default value
     21    00008C 32015B                   ld (current_pen),a
     22    00008F 110000                   LD DE,h'0000            ; Set XYPOS
                                                                    D - Y , E -
                                                                    X to the
                                                                    default of
                                                                    0,0
     23    000092 ED53035B                 LD (cursor_y),DE
     24    000096 CD....                   call load_font
     25    000099 AF                       xor a
     26    00009A D3FE                     out (254), a
     27    00009C 0612                     ld b,h'12
     28    00009E 1602                     ld d, h'2
     29    0000A0 CD....                   call set_ram_pager
     30    0000A3 CD....                   call LD_64_PAL          ; Load
                                                                    default 64
                                                                    colour
                                                                    palette
     31    0000A6 2103C0                   ld hl, h'c003           ; Hopefully
                                                                    set 360x288
                                                                    text
                                                                    ?
     32    0000A9 CD....                   call set_video_mode
     33    0000AC 0613                     ld b,h'13
     34    0000AE 16F8                     ld d, txpage
     35    0000B0 CD....                   call set_ram_pager
     36    0000B3 CD....                   call cls_text
     37    0000B6 3E00                     ld a, h'0
     38    0000B8 32025B                   ld (border_colour), a
     39    0000BB CD....                   call set_border
     40    0000BE                          
     41    0000BE           
     42    0000BE          
     43    0000BE                          
     44    0000BE CD....    CALL INIT      ; Initialise PS2 keyboard interface.
     45    0000C1          
     46    0000C1          ;Initialise IM2 interrupts:
     47    0000C1 21....   INTA            LD HL, I_N_T
     48    0000C4 22FF5B                   LD (h'5BFF), HL ; Address for IM2
                                                            mode routine.
     49    0000C7 F3                       DI
     50    0000C8 3E5B                     LD A, h'5B
     51    0000CA ED47                     LD I, A
     52    0000CC ED5E                     IM 2
     53    0000CE          
     54    0000CE C3....                   jp MAIN
     55    0000D1          
     56    0000D1          ;-------------------------------
     57    0000D1          ;PS2 initialization:
     58    0000D1 01F7EF   INIT            LD BC,h'EFF7
     59    0000D4 3E80                     LD A,h'80
     60    0000D6 ED79                     OUT (C),A
     61    0000D8 01F7DF                   LD BC,h'DFF7
     62    0000DB 3EF0                     LD A,h'F0
     63    0000DD ED79                     OUT (C),A
     64    0000DF 01F7BF                   LD BC,h'BFF7
     65    0000E2 3E02                     LD A,h'02
     66    0000E4 ED79                     OUT (C),A
     67    0000E6 C9                       RET
     68    0000E7          ;-------------------------------
     69    0000E7          ; IM2 Interrupt handler:
     70    0000E7 F5       I_N_T           PUSH AF
     71    0000E8 C5                       PUSH BC
     72    0000E9 D5                       PUSH DE
     73    0000EA E5                       PUSH HL
     74    0000EB DDE5                     PUSH IX
     75    0000ED D9                       EXX
     76    0000EE 08                       EX AF, AF
     77    0000EF F5                       PUSH AF
     78    0000F0 C5                       PUSH BC
     79    0000F1 D5                       PUSH DE
     80    0000F2 E5                       PUSH HL
     81    0000F3          
     82    0000F3 CD....                   CALL PSDII      ; Get value from PS2
                                                            keyboard buffer.
     83    0000F6          
     84    0000F6 E1                       POP HL
     85    0000F7 D1                       POP DE
     86    0000F8 C1                       POP BC
     87    0000F9 F1                       POP AF
     88    0000FA D9                       EXX
     89    0000FB 08                       EX AF, AF
     90    0000FC DDE1                     POP IX
     91    0000FE E1                       POP HL
     92    0000FF D1                       POP DE
     93    000100 C1                       POP BC
     94    000101 F1                       POP AF
     95    000102 FB                       EI
     96    000103 C9                       RET
     97    000104                          
     98    000104          ;MAIN CYCLE:
     99    000104 FB       MAIN            EI   
    100    000105 110014                   ld de, h'1400           ; Set Y=20 ,
                                                                    X=45
    101    000108 ED53035B                 ld (cursor_y), de
    102    00010C 3E31                     ld a, '1'
    103    00010E CD....                   Call os_plotchar
    104    000111 3E32                     ld a, '2'
    105    000113 CD....                   Call os_plotchar
    106    000116 111F14                   ld de, h'141f           ; Set Y=20 ,
                                                                    X=31
    107    000119 ED53035B                 ld (cursor_y), de
    108    00011D 3E33                     ld a, '3'
    109    00011F CD....                   Call os_plotchar
    110    000122 3A055B                   ld a, (OS_window_cols)
    111    000125 D601                     sub 1
    112    000127 1614                     ld d, h'14
    113    000129 5F                       ld e, a
    114    00012A                          ;ld de, h'141f          ; Set Y=20 ,
                            X=31
    115    00012A ED53035B                 ld (cursor_y), de
    116    00012E 3E34                     ld a, '4'                      
                                                  
    117    000130 CD....                   Call os_plotchar
    118    000133          
    119    000133 3E0C                     ld a,h'0C                       ;
                                                 Set charcol variable to
                                                 default value
    120    000135 32015B                   ld (current_pen),a
    121    000138 110000                   ld de, h'0000           ; Set Y=0 ,
                                                                    X=0
    122    00013B ED53035B                 ld (cursor_y), de
    123    00013F 21....                   ld hl , M_HEAD1
    124    000142 CD....                   call print_msg_c
    125    000145 3E0F                     ld a, h'0f
    126    000147 32015B                   ld (current_pen), a
    127    00014A 110001                   ld de, h'0100           ; Set Y=1 ,
                                                                    X=0
    128    00014D ED53035B                 ld (cursor_y), de
    129    000151 21....                   ld hl , M_HEAD2
    130    000154 CD....                   call print_msg_c
    131    000157          
    132    000157 CD....                   call parse
    133    00015A          
    134    00015A          
    135    00015A          
    136    00015A 11000A   MAIN1           ld de, h'0A00           ; Set Y=10 ,
                                                                    X=0
    137    00015D ED53035B                 ld (cursor_y), de
    138    000161 CD....                   CALL CLAVA      ;poll for key
                                                            press
    139    000164 2803                     JR Z, nvramloop ;Z - not pressed, NZ
                                                            - pressed
    140    000166 CD....                   Call os_plotchar
    141    000169          nvramloop       
    142    000169          
    143    000169                                          
    144    000169                          
    145    000169 110005                   ld de, h'0500           ; Set Y=5 ,
                                                                    X=0
    146    00016C ED53035B                 ld (cursor_y), de
    147    000170 21....                   ld hl , M_TIME
    148    000173 CD....                   call os_print_string
    149    000176 1E04                     ld e, h'04
    150    000178 CD....                   call READ_NVRAM_LOC
    151    00017B 3A005D                   ld a, (nv_buf)
    152    00017E CD....                   call BCD_DISP
    153    000181 3E3A                     ld a, ':'
    154    000183 CD....                   call os_plotchar
    155    000186 1E02                     ld e, h'02
    156    000188 CD....                   call READ_NVRAM_LOC
    157    00018B 3A005D                   ld a, (nv_buf)
    158    00018E CD....                   call BCD_DISP
    159    000191 3E3A                     ld a, ':'
    160    000193 CD....                   call os_plotchar
    161    000196 1E00                     ld e, h'00
    162    000198 CD....                   call READ_NVRAM_LOC
    163    00019B 3A005D                   ld a, (nv_buf)
    164    00019E CD....                   call BCD_DISP
    165    0001A1 C3....                   jp MAIN1
    166    0001A4                          
    167    0001A4          
    168    0001A4          #include "nvram.asm"
    169    000232          #include "gfx-routines.asm"
    170    000443          #include "maths-routines.asm"
    171    000533          #include "parser.asm"
    172    0005AF          #include "ps2_handler.asm"
    173    000964          #include "commands/test.asm"
    174    00096F          #include "commands/time.asm"
    175    0009A5          #include "commands/date.asm"
    176    0009E5          #include "commands/cls.asm"
    177    0009F1          #include "booter.asm"
    178    0010F8          #include "arrays.asm"
    179    00142C          #include "restarts.asm"
    180    000068          
    181    000068          
    182    000068          
    183    000068                  end
##############################
#          CRC:F6CE          #
#        Errors:   0         #
#        Warnings: 0         #
#        Bytes: 5036         #
##############################



