###############################################################################
#                                                                             #
#     IAR Systems Z80/64180 Assembler V4.06A/W32 02/Apr/2012  09:52:50        #
#     Copyright 2001 IAR Systems. All rights reserved.                        #
#                                                                             #
#           Target option =  z80                                              #
#           Source file   =  js-os.asm                                        #
#           List file     =  js-os.lst                                        #
#           Object file   =  js-os.r01                                        #
#           Command line  =  js-os.asm -l js-os.lst                           #
#                                                                             #
###############################################################################

      1    005B00          ; ------- external modules
      2    000000          extern    font8
      3    005B00          #include "conf.asm"
      4    005B00          #include "macro.asm"
      5    005B00          #include "vars.asm"
      6    004420          
      7    004420          
      8    004420          ; ------- main code
      9    000000                          rseg CODE
     10    000000          
     11    000000 F3                       di
     12    000001 C3....                   jp START
     13    000004          
     14    000080                          org h'80        ; Decimal 128
     15    000080          START
     16    000080 0611                     ld b,h'11
     17    000082 1605                     ld d, h'5
     18    000084 CD....                   call set_ram_pager
     19    000087 310060                   ld sp, stck
     20    00008A 3E0C                     ld a,h'0C                       ;
                                                 Set charcol variable to
                                                 default value
     21    00008C 32015B                   ld (current_pen),a
     22    00008F 110000                   LD DE,h'0000            ; Set XYPOS
                                                                    D - Y , E -
                                                                    X to the
                                                                    default of
                                                                    0,0
     23    000092 ED53035B                 LD (cursor_y),DE
     24    000096 CD....                   call load_font
     25    000099 AF                       xor a
     26    00009A D3FE                     out (254), a
     27    00009C 0612                     ld b,h'12
     28    00009E 1602                     ld d, h'2
     29    0000A0 CD....                   call set_ram_pager
     30    0000A3 CD....                   call LD_64_PAL          ; Load
                                                                    default 64
                                                                    colour
                                                                    palette
     31    0000A6 2103C0                   ld hl, h'c003           ; Hopefully
                                                                    set 360x288
                                                                    text
                                                                    ?
     32    0000A9 CD....                   call set_video_mode
     33    0000AC 0613                     ld b,h'13
     34    0000AE 16F8                     ld d, txpage
     35    0000B0 CD....                   call set_ram_pager
     36    0000B3 CD....                   call cls_text
     37    0000B6 3E00                     ld a, h'0
     38    0000B8 32025B                   ld (border_colour), a
     39    0000BB CD....                   call set_border
     40    0000BE                          
     41    0000BE           ; Setup system variables
     42    0000BE          
     43    0000BE 3E01                     ld a, 1
     44    0000C0 32085B                   ld (cursorstatus), a
     45    0000C3 3E64                     ld a, 100
     46    0000C5 32075B                   ld (cursorflashtimer), a
     47    0000C8                          
     48    0000C8                          ;-----------------------------------
                           -----------------------------------
     49    0000C8                          ;PS2 initialization:
     50    0000C8          
     51    0000C8 01F7EF                   LD BC,h'EFF7
     52    0000CB 3E80                     LD A,h'80
     53    0000CD ED79                     OUT (C),A
     54    0000CF 01F7DF                   LD BC,h'DFF7
     55    0000D2 3EF0                     LD A,h'F0
     56    0000D4 ED79                     OUT (C),A
     57    0000D6 01F7BF                   LD BC,h'BFF7
     58    0000D9 3E02                     LD A,h'02
     59    0000DB ED79                     OUT (C),A
     60    0000DD          
     61    0000DD                          ;-----------------------------------
                           -----------------------------------
     62    0000DD                          ;Initialise IM2 interrupts:
     63    0000DD          
     64    0000DD 21....                   LD HL, I_N_T
     65    0000E0 22FF5B                   LD (h'5BFF), HL ; Address for IM2
                                                            mode routine.
     66    0000E3 F3                       DI
     67    0000E4 3E5B                     LD A, h'5B
     68    0000E6 ED47                     LD I, A
     69    0000E8 ED5E                     IM 2
     70    0000EA          
     71    0000EA                          ;-----------------------------------
                           -----------------------------------
     72    0000EA          
     73    0000EA          ;MAIN CYCLE:
     74    0000EA          MAIN              
     75    0000EA                          
     76    0000EA 3E0C                     ld a,h'0C                       ;
                                                 Set charcol variable to
                                                 default value
     77    0000EC 32015B                   ld (current_pen),a
     78    0000EF 110000                   ld de, h'0000           ; Set Y=0 ,
                                                                    X=0
     79    0000F2 ED53035B                 ld (cursor_y), de
     80    0000F6 21....                   ld hl , M_HEAD1
     81    0000F9 CD....                   call print_msg_c
     82    0000FC 3E0F                     ld a, h'0f
     83    0000FE 32015B                   ld (current_pen), a
     84    000101 110001                   ld de, h'0100           ; Set Y=1 ,
                                                                    X=0
     85    000104 ED53035B                 ld (cursor_y), de
     86    000108 21....                   ld hl , M_HEAD2
     87    00010B CD....                   call print_msg_c
     88    00010E                          
     89    00010E 110005                   ld de, h'0500                   ; Y
                                                   = 5 , X = 0 setup powerup
                                                   cursor position
     90    000111 ED53035B                 ld (cursor_y), de
     91    000115                          
     92    000115                          ;-----------------------------------
                           --------------------
     93    000115                          ;initialization for inputing
                            string:
     94    000115          
     95    000115 CD....                   call get_address
     96    000118                          ;LD HL, h'C000          ; address on
                            screen (first line)
     97    000118 110080                   LD DE, h'8000           ;curMAX +
                                                                    curNOW
     98    00011B          
     99    00011B                          ;curMAX - lenght of editing
                            string
    100    00011B                          ;curNOW - cursor starting position
    101    00011B          
    102    00011B 3EFF                     LD A, h'FF                      ;
                                                  #FF - initialization
    103    00011D CD....                   CALL ISTR
    104    000120                          
    105    000120                          ;-----------------------------------
                           --------------------
    106    000120          
    107    000120                          
    108    000120          
    109    000120                          
    110    000120 FB       MAIN1           ei
    111    000121 76                       halt
    112    000122                          ;if ENTER pressed then exit:
    113    000122 CD....                   CALL ENKE
    114    000125 200B                     jr nz, enter
    115    000127          
    116    000127          ;editing string:
    117    000127 3E0F                     ld a, h'0f
    118    000129 32015B                   ld (current_pen), a
    119    00012C                          
    120    00012C AF                       XOR A; 0 - inputing
    121    00012D CD....                   CALL ISTR
    122    000130 18EE                     JR MAIN1
    123    000132          
    124    000132          enter
    125    000132 3E01                     ld a, 01
    126    000134 CD....                   call ISTR
    127    000137 E5                       push hl                 ; copy HL
                                                                    into
                                                                    DE
    128    000138 D1                       pop de
    129    000139 CD....                   call parse
    130    00013C 18E2                     jr MAIN1
    131    00013E                          
    132    00013E          
    133    00013E          ;---------------------------------------------------
                           -------------------
    134    00013E          ; IM2 Interrupt handler:
    135    00013E F5       I_N_T           PUSH AF
    136    00013F C5                       PUSH BC
    137    000140 D5                       PUSH DE
    138    000141 E5                       PUSH HL
    139    000142 DDE5                     PUSH IX
    140    000144 D9                       EXX
    141    000145 08                       EX AF, AF
    142    000146 F5                       PUSH AF
    143    000147 C5                       PUSH BC
    144    000148 D5                       PUSH DE
    145    000149 E5                       PUSH HL
    146    00014A          
    147    00014A CD....                   CALL PSDII      ; Get value from PS2
                                                            keyboard buffer.
    148    00014D          
    149    00014D E1                       POP HL
    150    00014E D1                       POP DE
    151    00014F C1                       POP BC
    152    000150 F1                       POP AF
    153    000151 D9                       EXX
    154    000152 08                       EX AF, AF
    155    000153 DDE1                     POP IX
    156    000155 E1                       POP HL
    157    000156 D1                       POP DE
    158    000157 C1                       POP BC
    159    000158 F1                       POP AF
    160    000159 FB                       EI
    161    00015A C9                       RET
    162    00015B          
    163    00015B          ;---------------------------------------------------
                           -------------------
    164    00015B          
    165    00015B          #include "nvram.asm"
    166    0001E9          #include "gfx-routines.asm"
    167    00044E          #include "maths-routines.asm"
    168    00053E          #include "parser.asm"
    169    0005B7          #include "ps2_handler.asm"
    170    00096C          #include "commands/test.asm"
    171    000977          #include "commands/time.asm"
    172    0009AD          #include "commands/date.asm"
    173    0009ED          #include "commands/cls.asm"
    174    0009F9          #include "booter.asm"
    175    001100          #include "arrays.asm"
    176    001434          #include "restarts.asm"
    177    000068          
    178    000068          
    179    000068          
    180    000068                  end
##############################
#          CRC:FEC0          #
#        Errors:   0         #
#        Warnings: 0         #
#        Bytes: 5044         #
##############################



