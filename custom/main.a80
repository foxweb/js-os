; jms-bios Date 22/01/2012

		include macros.a80

		; TS-config extended ports definition

		extp:		equ $AF

		vconfig:	equ $00
		status:	equ $00	;R
		vpage:	equ $01
		xoffsl:	equ $02
		xoffsh:	equ $03
		yoffsl:	equ $04
		yoffsh:	equ $05
		tsconfig:	equ $06
		vconfig2:	equ $08
		border:	equ $0F

		rampage0:	equ $10
		rampage1:	equ $11
		rampage2:	equ $12
		page2:	equ $12	;R
		rampage3:	equ $13
		page3:	equ $13	;R
		nwraddr:	equ $14
		fmaddr:	equ $15
		tgpage:	equ $18
		rarrpage:	equ $19
		dmasaddrl:	equ $1A
		dmasaddrh:	equ $1B
		dmasaddrx:	equ $1C
		dmadaddrl:	equ $1D
		dmadaddrh:	equ $1E
		dmadaddrx:	equ $1F
		dmamaddrl:	equ $30
		dmamaddrh:	equ $31
		dmamaddrx:	equ $33
		sysconfig:	equ $20
		memconfig:	equ $21
		hsint:	equ $22
		vsintl:	equ $23
		vsinth:	equ $24
		intvect:	equ $25
		dmalen:	equ $26
		dmactrl:	equ $27
		dmanum:	equ $28
		fddvirt:	equ $29
		xtoverride:	equ $2A

		huscontrol:	equ $80
		hussamprate:	equ $81
		hustickratel:	equ $82
		hustickrateh:	equ $83
		husrld0:	equ $84
		husrld1:	equ $85
		husrld2:	equ $86
		husrld3:	equ $87
		husstatus:	equ $80	;R

;	JMS Variables

		XYPOS:	equ $6000
		color:	equ $0F
		buffer:	equ $6002

		ORG 0
START   	DI
		LD SP,$5FFF		; Set stack pointer to $5FFF
		CALL LOAD_FONT
		CALL CLS
		CALL SET_MODE
		LD 	B,color
		LD 	DE,$001E		; Set XYPOS D - Y , E - X
		LD	(XYPOS),DE
		LD	HL,TEXT
		CALL PRINT_STRING
		LD	B,color-14
		LD 	DE,$0200		; Set XYPOS D - Y , E - X
		LD	(XYPOS),DE
		LD	HL,TEXT_TWO
		CALL PRINT_STRING

		LD	HL,$C500	; Display first 90 characters from font on line 0
		LD	A,$0
LOOP1       LD      (HL),A
		SET     7,L		; Set color
        	LD      (HL),color-10
        	RES     7,L		; End of set color
		INC	HL
		INC	A
		CP	$5A
		JP	C,LOOP1
		LD	HL,$C600	; Display next 90 characters from font on line 1
LOOP2       LD      (HL),A
		SET     7,L		; Set color
        	LD      (HL),color-5
        	RES     7,L		; End of set color
		INC	HL
		INC	A
		CP	$B5
		JP	C,LOOP2
		LD	HL,$C700	; Display last 75 characters from font on line 2
LOOP3       LD      (HL),A
		SET     7,L		; Set color
        	LD      (HL),color-8
        	RES     7,L		; End of set color
		INC	HL
		INC	A
		CP	$FF
		JP	C,LOOP3
		
		LD 	DE,$1000		; Set XYPOS D - Y , E - X
		LD	(XYPOS),DE
		LD 	B,color
		LD	HL,TEXT
		CALL PRINT_STRING

		HALT


; Routines below here
 
LOAD_FONT   LD      B,rampage3		; Load font into $C000 ram page 9
        	LD      D,$09
        	CALL	SET_RAM_PAGER
        	LD      HL,FONT
        	LD      DE,$C000
        	LD      BC,$800
        	LDIR
		RET

CLS       	LD      B,rampage3		; Clear screen at ram page 8
        	LD      D,$08
        	CALL	SET_RAM_PAGER
        	LD      HL,$C000
        	LD      DE,$C001
        	LD      BC,16383
        	LD      (HL),0
        	LDIR
		RET


SET_MODE    LD      HL,CONFIG+5	; Set video mode
        	LD      BC,$06AF
        	OTDR
		RET


SET_RAM_PAGER			; Entry B=Port base 10-$0000 11-$4000 12-$8000 13-$C000, D=Page
		LD C,extp		
		out (c),D	; This could be $00-$ff
		RET


PRINT_STRING		; In:    [HL] - ASCII-string , B - color , out: [A] - ASCII-character
		LD      A,(HL)
		INC     HL
		OR      A
		RET     Z
		CALL    PUTCHAR
      	JR      PRINT_STRING
		RET

PUTCHAR        ;in:    A - char , B - color , [XYPOS], XYPOS - 2 bytes X,Y - you DO NOT need more, as 0<=X<=127, 0<=Y<=63
		push hl
		ld hl, (XYPOS)
		set 6, h
		set 7, h  ; here you have #C000 + Y*256 + X
		ld (hl), a
		set 7, l
		ld (hl), b	; Set color
		ld a, l
		inc a
		and 127

; If X>89 then set x=0 and y=y+1

		CP	$5A		; Does X = 90 if so set X = 0 and increase Y+1
		JP	C,XYTEST
		LD	L,$0
		INC	H
		ld (XYPOS), hl
		pop hl
		ret

XYTEST	ld (XYPOS), a
		pop hl
		ret

SCROLLUP	LD DE,$C000		; Copy lines 1 to 89 to 0 to 88
		LD HL,$C100
		LD BC,$3EFF
		; Then clear bottom line 89
		ld hl,$E400		; HL = start address of block
		ld e,l		; DE = HL + 1
		ld d,h
		inc de
		ld (hl),$00		; initialise first byte of block with data byte (&00)
		ld bc,$7F		; BC = length of block in bytes HL+BC-1 = end address of block
		ldir				; fill memory
		ret

		include gfx-routines.a80
		include keyboard-routines.a80
		;include PS2.a80

FONT		binclude jms-font.fnt

CONFIG  DEFB    $C3,$08,$00,$00,$00,$00	; Setup Text mode 90 x 36                

TEXT	DB "JMS Bios Version 22/01/2012",$FC,0
TEXT_TWO	DB "Below is the complete 256 Character font 2048 bytes.",0


   ; Fill rest of rom with $FF
		DUPL $3D2F-$,$FF
		DB $00,$C9
   
   ; Fill rest of rom with $FF
		DUPL $4000-$,$FF